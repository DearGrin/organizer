# Generated by Django 4.0.6 on 2022-09-18 11:50

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import apps.users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', apps.users.models.MyUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('influence', models.TextField()),
                ('conditions', models.TextField()),
                ('device', models.TextField()),
                ('soft', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'experiments',
            },
        ),
        migrations.CreateModel(
            name='ExperimentGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('experiment_id', models.ForeignKey(db_column='experiment_id', on_delete=django.db.models.deletion.CASCADE, to='users.experiment')),
            ],
            options={
                'db_table': 'experiment_groups',
            },
        ),
        migrations.CreateModel(
            name='ExperimentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'experiment_methods',
            },
        ),
        migrations.CreateModel(
            name='ExperimentObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'experiment_objects',
            },
        ),
        migrations.CreateModel(
            name='ExperimentSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.ForeignKey(db_column='entity_id', on_delete=django.db.models.deletion.CASCADE, to='users.entity')),
                ('group_id', models.ForeignKey(db_column='group_id', on_delete=django.db.models.deletion.CASCADE, to='users.experimentgroup')),
            ],
            options={
                'db_table': 'experiment_samples',
            },
        ),
        migrations.CreateModel(
            name='ExperimentMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.ForeignKey(db_column='entity_id', on_delete=django.db.models.deletion.CASCADE, to='users.entity')),
                ('sample_id', models.ForeignKey(db_column='sample_id', on_delete=django.db.models.deletion.CASCADE, to='users.experimentsample')),
            ],
            options={
                'db_table': 'experiment_measures',
            },
        ),
        migrations.CreateModel(
            name='ExperimentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('entity_id', models.ForeignKey(db_column='entity_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='users.entity')),
                ('experiment_id', models.ForeignKey(db_column='experiment_id', on_delete=django.db.models.deletion.CASCADE, to='users.experiment')),
            ],
            options={
                'db_table': 'experiment_files',
            },
        ),
        migrations.AddField(
            model_name='experiment',
            name='method_id',
            field=models.ForeignKey(db_column='method_id', on_delete=django.db.models.deletion.CASCADE, to='users.experimentmethod'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='object_id',
            field=models.ForeignKey(db_column='object_id', on_delete=django.db.models.deletion.CASCADE, to='users.experimentobject'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='user_id',
            field=models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
